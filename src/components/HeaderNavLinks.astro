---
import { getCollection, getEntry } from 'astro:content';

// Récupérer toutes les catégories
const allCategories = await getCollection('categories');

// Pour chaque catégorie, récupère la catégorie parente si elle existe
const categoriesWithParents = await Promise.all(
  allCategories.map(async (category) => {
    const parentCategory = category.data.parent_category
      ? await getEntry(category.data.parent_category)  // Récupère l'entrée parente
      : null;
    return { ...category, parentCategory };  // Inclure la catégorie parente dans l'objet catégorie
  })
);

// Filtrer les catégories avec displayMenu: true
const filteredCategories = categoriesWithParents.filter(category => category.data.displayMenu === true);

// Trier les catégories par level puis par position
const sortedCategories = filteredCategories.sort((a, b) => {
  // Trier par level
  if (a.data.level !== b.data.level) {
    return a.data.level - b.data.level;
  }
  // Si les levels sont égaux, trier par position
  return a.data.position - b.data.position;
});

// Séparer les catégories principales (niveau 0) et les sous-catégories pour 'product' et 'blog'
const rootProductCategories = sortedCategories.filter(category => category.data.level === 0 && category.data.type === 'product');
const subProductCategories = sortedCategories.filter(category => category.data.level > 0 && category.data.type === 'product');

const rootBlogCategories = sortedCategories.filter(category => category.data.level === 0 && category.data.type === 'blog');
const subBlogCategories = sortedCategories.filter(category => category.data.level > 0 && category.data.type === 'blog');

// Dictionnaire pour les sous-catégories, séparé par type
const subCategoriesDict = {
  product: {},
  blog: {},
};

// Remplir le dictionnaire avec les sous-catégories
subProductCategories.forEach(category => {
  const parentCategory = category.parentCategory;  // Utiliser la catégorie parente récupérée
  if (parentCategory) {
    const parentId = parentCategory.data.id;  // Utilisation de l'ID du parent
    if (!subCategoriesDict.product[parentId]) {
      subCategoriesDict.product[parentId] = [];
    }
    subCategoriesDict.product[parentId].push(category);
  }
});

subBlogCategories.forEach(category => {
  const parentCategory = category.parentCategory;  // Utiliser la catégorie parente récupérée
  if (parentCategory) {
    const parentId = parentCategory.data.id;  // Utilisation de l'ID du parent
    if (!subCategoriesDict.blog[parentId]) {
      subCategoriesDict.blog[parentId] = [];
    }
    subCategoriesDict.blog[parentId].push(category);
  }
});

// Fonction pour obtenir les sous-catégories à partir du dictionnaire
const getSubcategories = (parentId, type) => {
  return subCategoriesDict[type][parentId] || [];
};



---
<div id="collapseMenu" class="max-lg:hidden lg:!block max-lg:before:fixed max-lg:before:bg-black max-lg:before:opacity-40 max-lg:before:inset-0 max-lg:before:z-50">
    <button id="toggleClose" class="lg:hidden fixed top-2 right-4 z-[100] rounded-full bg-white w-9 h-9 flex items-center justify-center border">
      <svg xmlns="http://www.w3.org/2000/svg" class="w-3.5 h-3.5 fill-black" viewBox="0 0 320.591 320.591">
        <path d="M30.391 318.583a30.37 30.37 0 0 1-21.56-7.288c-11.774-11.844-11.774-30.973 0-42.817L266.643 10.665c12.246-11.459 31.462-10.822 42.921 1.424 10.362 11.074 10.966 28.095 1.414 39.875L51.647 311.295a30.366 30.366 0 0 1-21.256 7.288z"></path>
        <path d="M287.9 318.583a30.37 30.37 0 0 1-21.257-8.806L8.83 51.963C-2.078 39.225-.595 20.055 12.143 9.146c11.369-9.736 28.136-9.736 39.504 0l259.331 257.813c12.243 11.462 12.876 30.679 1.414 42.922-.456.487-.927.958-1.414 1.414a30.368 30.368 0 0 1-23.078 7.288z"></path>
      </svg>
    </button>
  
    <ul class="lg:flex lg:gap-x-10 max-lg:space-y-3 max-lg:fixed max-lg:bg-white max-lg:w-2/3 max-lg:min-w-[280px] max-lg:top-0 max-lg:left-0 max-lg:p-4 max-lg:h-full max-lg:shadow-md max-lg:overflow-auto z-50">
      <!-- Accueil -->
      <li class="max-lg:border-b max-lg:pb-4 px-3 lg:hidden">
        <a href="/" class="hover:text-[#007bff] text-[#007bff] font-semibold block text-[15px]">Accueil</a>
      </li>
  
      <!-- Blog avec dropdown pour catégories -->
      <li class="group max-lg:border-b max-lg:px-3 max-lg:py-3 relative">
        <a href="/blog" class="hover:text-[#007bff] text-gray-800 text-[15px] flex items-center">
          Blog
          <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" class="ml-1 inline-block" viewBox="0 0 24 24">
            <path d="M12 16a1 1 0 0 1-.71-.29l-6-6a1 1 0 0 1 1.42-1.42l5.29 5.3 5.29-5.29a1 1 0 0 1 1.41 1.41l-6 6a1 1 0 0 1-.7.29z" data-name="16" data-original="#000000" />
          </svg>
        </a>
        <ul class="absolute top-5 max-lg:top-8 left-0 z-50 block space-y-2 shadow-lg bg-white max-h-0 overflow-hidden min-w-[230px] group-hover:opacity-100 group-hover:max-h-[700px] px-6 group-hover:pb-4 group-hover:pt-6 transition-all duration-[400ms]">
          {rootBlogCategories.map(category => (
            <li class="border-b py-3">
              <a href={`/blog/${category.slug}`} class="hover:text-[#007bff] hover:fill-[#007bff] text-gray-800 text-[15px] flex items-center">
                {category.data.name}
              </a>
              <!-- Sous-catégories pour 'blog' -->
              {getSubcategories(category.data.id, 'blog').length > 0 && (
                <ul class="space-y-2 mt-2">
                  {getSubcategories(category.data.id, 'blog').map(subcategory => (
                    <li class="pl-4">
                      <a href={`/blog/${subcategory.slug}`} class="hover:text-[#007bff] text-gray-600 text-[14px]">
                        {subcategory.data.name}
                      </a>
                      <!-- Sous-sous-catégories -->
                      {getSubcategories(subcategory.data.id, 'blog').length > 0 && (
                        <ul class="space-y-2 mt-2 pl-4">
                          {getSubcategories(subcategory.data.id, 'blog').map(subsubcategory => (
                            <li class="pl-4">
                              <a href={`/blog/${subcategory.slug}/${subsubcategory.slug}`} class="hover:text-[#007bff] text-gray-600 text-[13px]">
                                {subsubcategory.data.name}
                              </a>
                            </li>
                          ))}
                        </ul>
                      )}
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
        </ul>
      </li>
  
      <!-- Boutique avec dropdown pour catégories -->
      <li class="group max-lg:border-b max-lg:px-3 max-lg:py-3 relative">
        <a href="/boutique" class="hover:text-[#007bff] text-gray-800 text-[15px] flex items-center">
          La Boutique
          <svg xmlns="http://www.w3.org/2000/svg" width="16px" height="16px" class="ml-1 inline-block" viewBox="0 0 24 24">
            <path d="M12 16a1 1 0 0 1-.71-.29l-6-6a1 1 0 0 1 1.42-1.42l5.29 5.3 5.29-5.29a1 1 0 0 1 1.41 1.41l-6 6a1 1 0 0 1-.7.29z" />
          </svg>
        </a>
        <ul class="absolute top-5 max-lg:top-8 left-0 z-50 block space-y-2 shadow-lg bg-white max-h-0 overflow-hidden min-w-[230px] group-hover:opacity-100 group-hover:max-h-[700px] px-6 group-hover:pb-4 group-hover:pt-6 transition-all duration-[400ms]">
          {rootProductCategories.map(category => (
            <li class="border-b py-3">
              <a href={`/boutique/${category.slug}`} class="hover:text-[#007bff] hover:fill-[#007bff] text-gray-800 text-[15px] flex items-center">
                {category.data.name}
              </a>
              <!-- Sous-catégories pour 'product' -->
              {getSubcategories(category.data.id, 'product').length > 0 && (
                <ul class="space-y-2 mt-2">
                  {getSubcategories(category.data.id, 'product').map(subcategory => (
                    <li class="pl-4">
                      <a href={`/boutique/${subcategory.slug}`} class="hover:text-[#007bff] text-gray-600 text-[14px]">
                        {subcategory.data.name}
                      </a>
                      <!-- Sous-sous-catégories -->
                      {getSubcategories(subcategory.data.id, 'product').length > 0 && (
                        <ul class="space-y-2 mt-2 pl-4">
                          {getSubcategories(subcategory.data.id, 'product').map(subsubcategory => (
                            <li class="pl-4">
                              <a href={`/boutique/${category.slug}/${subcategory.slug}/${subsubcategory.slug}`} class="hover:text-[#007bff] text-gray-600 text-[13px]">
                                {subsubcategory.data.name}
                              </a>
                            </li>
                          ))}
                        </ul>
                      )}
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
        </ul>
      </li>
  
      <!-- Autres liens -->
      <li class="max-lg:border-b max-lg:px-3 max-lg:py-3"><a href="/about" class="hover:text-[#007bff] text-gray-800 text-[15px] block">A propos</a></li>
      <li class="max-lg:border-b max-lg:px-3 max-lg:py-3"><a href="/contact" class="hover:text-[#007bff] text-gray-800 text-[15px] block">Contact</a></li>
    </ul>
  </div>
  